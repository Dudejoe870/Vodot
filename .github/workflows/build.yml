name: 🛠️ Builds
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  get_godotcpp_version:
    runs-on: ubuntu-20.04
    name: Get Godot Cpp Submodule version for cache hash
    outputs:
      commit_hash: ${{ steps.get_hash.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: get_hash
        name: Get Hash
        shell: sh
        run: |
          cd "${{ github.workspace }}/godot-cpp"
          echo commit_hash=$(git rev-parse --short HEAD) >> "$GITHUB_OUTPUT"
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    needs: get_godotcpp_version
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64
          - identifier: windows-debug
            name: Windows Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_64
          - identifier: android-release
            name: Android Release
            runner: ubuntu-20.04
            target: template_release
            platform: android
            arch: arm64

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (Android) Set up Java 11
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: (Android) Set up Android SDK
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: android-actions/setup-android@v2

      - name: (Android) Install Android Tools
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        shell: sh
        run: |
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;21.4.7075529"

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Set up SCons
        shell: bash
        run: |
          python -m pip install scons

      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache SCons Database
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/**/.sconsign.dblite
          key: ${{ matrix.identifier }}-${{ needs.get_godotcpp_version.outputs.commit_hash }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.identifier }}-${{ needs.get_godotcpp_version.outputs.commit_hash }}-${{ github.ref }}-${{ github.sha }}
            ${{ matrix.identifier }}-${{ needs.get_godotcpp_version.outputs.commit_hash }}-${{ github.ref }}
            ${{ matrix.identifier }}-${{ needs.get_godotcpp_version.outputs.commit_hash }}

      - name: Cache Godot Cpp
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/godot-cpp/gen/
            ${{ github.workspace }}/godot-cpp/src/
            ${{ github.workspace }}/godot-cpp/bin/
          key: ${{ matrix.identifier }}-${{ needs.get_godotcpp_version.outputs.commit_hash }}

      - name: Compile extension
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'

      - name: Finalize directory structure
        shell: sh
        run: |
          addons_output_dir=${{ github.workspace }}/addon-output/addons
          for addon in ${{ github.workspace }}/project/addons/*/; do
            addon_output_dir=$addons_output_dir/$(basename $addon)
            mkdir -p "$addon_output_dir/"
            cp -a "$addon/" "$addons_output_dir/"
            cp --no-clobber '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' "$addon_output_dir/"
            rm "$addon_output_dir/bin/.gitignore"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/addon-output/
